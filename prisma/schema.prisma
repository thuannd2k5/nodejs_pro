// Prisma schema for PostgreSQL version

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}

model User {
  id          Int     @id @default(autoincrement())
  username    String  @unique
  password    String
  address     String?
  fullname    String?
  phone       String?
  accountType String
  avatar      String?

  role   Role @relation(fields: [roleId], references: [id])
  roleId Int

  cart   Cart?
  orders Order[]

  @@map("users")
}

model Role {
  id          Int    @id @default(autoincrement())
  name        String @unique
  description String

  user User[]

  @@map("roles")
}

model Product {
  id         Int     @id @default(autoincrement())
  name       String
  price      Int
  detailDesc String
  shortDesc  String
  quantity   Int
  sold       Int?    @default(0)
  factory    String
  target     String
  image      String?

  cartDetails  CartDetail[]
  orderDetails OrderDetail[]

  @@map("products")
}

model Cart {
  id  Int @id @default(autoincrement())
  sum Int

  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique

  cartDetails CartDetail[]

  @@map("carts")
}

model CartDetail {
  id       Int @id @default(autoincrement())
  price    Int
  quantity Int

  cart   Cart @relation(fields: [cartId], references: [id])
  cartId Int

  product   Product @relation(fields: [productId], references: [id])
  productId Int

  @@map("cart_detail")
}

model Order {
  id              Int     @id @default(autoincrement())
  totalPrice      Int
  receiverAddress String
  receiverName    String
  receiverPhone   String
  status          String  @default("PENDING") // PENDING, CANCELED, COMPLETE
  paymentMethod   String // COD, BANKING
  paymentStatus   String
  paymentRef      String?

  user   User @relation(fields: [userId], references: [id])
  userId Int

  orderDetails OrderDetail[]

  @@map("orders")
}

model OrderDetail {
  id       Int @id @default(autoincrement())
  price    Int
  quantity Int

  order   Order @relation(fields: [orderId], references: [id])
  orderId Int

  product   Product @relation(fields: [productId], references: [id])
  productId Int

  @@map("order_detail")
}
