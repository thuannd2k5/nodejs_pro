<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="UTF-8">
    <title>Tr·ª£ L√Ω AI Th·ªùi Trang</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- Google Web Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link
        href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600&family=Raleway:wght@600;800&display=swap"
        rel="stylesheet">

    <!-- Icon Font Stylesheet -->
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.4/css/all.css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.1/font/bootstrap-icons.css" rel="stylesheet">

    <!-- Libraries Stylesheet -->
    <link href="/client/lib/lightbox/css/lightbox.min.css" rel="stylesheet">
    <link href="/client/lib/owlcarousel/assets/owl.carousel.min.css" rel="stylesheet">


    <!-- Customized Bootstrap Stylesheet -->
    <link href="/client/css/bootstrap.min.css" rel="stylesheet">

    <!-- Template Stylesheet -->
    <link href="/client/css/style.css" rel="stylesheet">
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .main-wrapper {
            display: flex;
            flex-direction: row;
            gap: 20px;
            padding: 40px;
            max-width: 1200px;
            margin: auto;
            height: 90vh;
        }

        .left-panel {
            flex: 1;
            background: white;
            border-radius: 12px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
            padding: 30px;
            overflow-y: auto;
        }

        .right-panel {
            flex: 1;
            display: flex;
            flex-direction: column;
            background: #ffffff;
            border-radius: 12px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }

        .chat-messages {
            flex: 1;
            padding: 20px;
            overflow-y: auto;
            background: #f9f9f9;
            position: relative;
        }

        .chat-input-area {
            border-top: 1px solid #ddd;
            padding: 15px;
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
        }

        .chat-input-area input[type="text"] {
            flex: 1;
        }

        .instruction-box {
            background: #fff3cd;
            padding: 15px;
            border-left: 5px solid #ffc107;
            border-radius: 5px;
            font-size: 15px;
            color: #856404;
        }

        .message {
            margin-bottom: 10px;
            padding: 10px;
            border-radius: 8px;
            max-width: 100%;
            word-wrap: break-word;
        }

        .user-message {
            background-color: #d1ecf1;
            text-align: right;
        }

        .ai-message {
            background-color: #e2e3e5;
            text-align: left;
        }

        .chat-image {
            max-width: 150px;
            max-height: 150px;
            display: block;
            margin-top: 5px;
            border-radius: 8px;
            object-fit: cover;
        }
    </style>
</head>

<body>

    <!-- Spinner Start -->
    <div id="spinner"
        class="show w-100 vh-100 bg-white position-fixed translate-middle top-50 start-50  d-flex align-items-center justify-content-center">
        <div class="spinner-grow text-primary" role="status"></div>
    </div>
    <!-- Spinner End -->
    <!-- Navbar start -->
    <%- include('./layout/header'); %>
        <!-- Navbar End -->

        <div class="main-wrapper">
            <!-- Left: Th√¥ng tin v√† n√∫t -->
            <div class="left-panel">
                <div class="chat-header text-center">
                    <h2>üß† Tr·ª£ L√Ω AI Th·ªùi Trang</h2>
                    <p>B·∫°n kh√¥ng ch·∫Øc n√™n ch·ªçn size n√†o? H√£y ƒë·ªÉ AI gi√∫p b·∫°n!</p>
                </div>

                <div class="instruction-box mb-4">
                    üëâ B·∫°n c√≥ th·ªÉ h·ªèi:
                    <ul class="mt-2 mb-0">
                        <li>‚úîÔ∏è "T√¥i cao 1m65, n·∫∑ng 60kg, n√™n m·∫∑c size n√†o?"</li>
                        <li>‚úîÔ∏è "Size M c√≥ r·ªông kh√¥ng?"</li>
                        <li>‚úîÔ∏è "√Åo thun cotton n√™n gi·∫∑t th·∫ø n√†o?"</li>
                    </ul>
                </div>

                <button id="startChatBtn" class="btn btn-warning w-100 mb-2">
                    ü§ñ B·∫Øt ƒë·∫ßu tr√≤ chuy·ªán v·ªõi AI
                </button>
            </div>

            <!-- Right: Khung chat -->
            <div class="right-panel">
                <div class="chat-messages" id="chatMessages">
                    <!-- Tin nh·∫Øn s·∫Ω ƒë∆∞·ª£c th√™m v√†o ƒë√¢y -->
                </div>

                <div class="chat-input-area">
                    <input type="text" id="chatInput" class="form-control" placeholder="Nh·∫≠p tin nh·∫Øn...">
                    <button class="btn btn-primary" onclick="sendMessage()">G·ª≠i</button>
                    <input type="file" id="imageInput" accept="image/*" style="display:none;"
                        onchange="sendImage(this)">
                    <button class="btn btn-outline-secondary" onclick="document.getElementById('imageInput').click()">üì∑
                        ·∫¢nh</button>
                    <button class="btn btn-outline-secondary" onclick="captureImage()">üì∏ Ch·ª•p</button>
                </div>
            </div>
        </div>

        <!-- Webcam capture setup -->
        <video id="video" style="display:none;" autoplay></video>
        <canvas id="canvas" style="display:none;"></canvas>

        <!-- Bootstrap JS -->
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

        <!-- Chat logic -->
        <script>
            const chatBox = document.getElementById("chatMessages");

            function addMessage(content, sender = "user", imageUrl = null) {
                const msg = document.createElement("div");
                msg.className = "message " + (sender === "user" ? "user-message" : "ai-message");
                msg.textContent = content;

                chatBox.appendChild(msg);

                if (imageUrl) {
                    const img = document.createElement("img");
                    img.src = imageUrl;
                    img.className = "chat-image";
                    chatBox.appendChild(img);
                }

                chatBox.scrollTop = chatBox.scrollHeight;
            }

            function sendMessage() {
                const input = document.getElementById("chatInput");
                const text = input.value.trim();
                if (!text) return;

                addMessage(text, "user");
                input.value = "";

                // Gi·∫£ l·∫≠p tr·∫£ l·ªùi c·ªßa AI
                setTimeout(() => {
                    addMessage("ü§ñ AI ƒëang x·ª≠ l√Ω c√¢u h·ªèi c·ªßa b·∫°n...", "ai");
                }, 500);
            }

            function sendImage(input) {
                const file = input.files[0];
                if (!file) return;

                const reader = new FileReader();
                reader.onload = () => {
                    addMessage("üì∑ B·∫°n ƒë√£ g·ª≠i m·ªôt h√¨nh ·∫£nh:", "user", reader.result);
                };
                reader.readAsDataURL(file);
            }

            function captureImage() {
                const video = document.getElementById("video");
                const canvas = document.getElementById("canvas");

                navigator.mediaDevices.getUserMedia({ video: true })
                    .then(stream => {
                        video.srcObject = stream;
                        video.style.display = "block";

                        setTimeout(() => {
                            canvas.width = video.videoWidth;
                            canvas.height = video.videoHeight;
                            canvas.getContext("2d").drawImage(video, 0, 0);
                            const imageData = canvas.toDataURL("image/png");

                            addMessage("üì∏ ·∫¢nh b·∫°n v·ª´a ch·ª•p:", "user", imageData);

                            // T·∫Øt webcam
                            stream.getTracks().forEach(track => track.stop());
                            video.style.display = "none";
                        }, 1500);
                    })
                    .catch(err => {
                        alert("Kh√¥ng th·ªÉ truy c·∫≠p webcam: " + err.message);
                    });
            }

            document.getElementById("startChatBtn").addEventListener("click", () => {
                addMessage("Ch√†o b·∫°n üëã! T√¥i l√† tr·ª£ l√Ω AI th·ªùi trang. H√£y cho t√¥i bi·∫øt chi·ªÅu cao, c√¢n n·∫∑ng ho·∫∑c ƒëi·ªÅu b·∫°n mu·ªën h·ªèi nh√©!", "ai");
            });
        </script>
        <!-- JavaScript Libraries -->
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.4/jquery.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js"></script>
        <script src="/client/lib/easing/easing.min.js"></script>
        <script src="/client/lib/waypoints/waypoints.min.js"></script>
        <script src="/client/lib/lightbox/js/lightbox.min.js"></script>
        <script src="/client/lib/owlcarousel/owl.carousel.min.js"></script>

        <!-- Template Javascript -->
        <script src="/client/js/main.js"></script>

</body>

</html>